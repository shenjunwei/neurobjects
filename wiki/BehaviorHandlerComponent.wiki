#summary Explains the use of the BehaviorHandler component

= `BehaviorHandler` =

== Introduction ==

This document gives an overview of the `BehaviorHandler` component. It shows how to use
the `TextBehaviorHandler` implementation of `BehaviorHandlerI` to open a text file
containing animal behavior data.

The component `BehaviorHandler` is a source-independent representation of the behavior data
for an animal. It abstracts the origin of the data, presenting the user with a unified
interface named `BehaviorHandlerI`.


== Loading the data file ==

A behavior data file must follow the format described in the `BehaviorDataFileFormat`
wiki page. To load the file, use the following:

{{{
BehaviorHandlerI handler = new TextBehaviorHandler(filepath);
}}}


== Accessing the behavior data ==

To access the behavior data, we can simply pass the desired label to `getIntervals` and
the handler will return all the intervals for which the label is defined. Ex:

{{{
List<Interval> intervals = handler.getIntervals("food");
}}}

To get the set of all defined labels, use `getLabelSet`.


== Complete example ==

{{{
package app;

import java.util.Set;

import nda.data.BehaviorHandlerI;
import nda.data.text.TextBehaviorHandler;


/**
 * This is a test application for the BehaviorHandlerI component and its
 * TextBehaviorHandler implementation. It shows how to read a text data file
 * containing an animal behavior specification and print it to the user.
 * 
 * @author Giuliano Vilela
 * @ingroup ExampleApps
 */
public class ShowBehaviorFileApp {
    public static void main(String[] args) throws Exception {
        // Path to the behavior data file
        String filepath = "setup/behaviors/ge4_contacts.txt";

        // Load the data file into memory using a BehaviorHandlerI
        BehaviorHandlerI handler = new TextBehaviorHandler(filepath);

        // Access all the labels that were used in the file
        Set<String> labels = handler.getLabelSet();

        // Print the labels and its intervals
        for (String label : labels) {
            System.out.printf("Label \"%s\" is defined for intervals: %s\n",
                    label, handler.getIntervals(label));
        }
    }
}
}}}
